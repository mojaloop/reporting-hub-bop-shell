# docker-compose --profile ory --profile shell up
version: '3.7'
networks:
  mojaloop-net:
    name: mojaloop-net
volumes:
  kratos-sqlite:

services:
  reporting-hub-bop-shell:
    profiles: ["shell"]
    container_name: reporting-hub-bop-shell
    image: mojaloop/reporting-hub-bop-shell
    build:
      context: .
      cache_from:
        - mojaloop/reporting-hub-bop-shell
    environment:
      - LOGIN_URL=http://127.0.0.1:4455/.ory/kratos/public/self-service/login
      - LOGOUT_URL=http://127.0.0.1:4455/.ory/kratos/public/self-service/logout/browser
      - AUTH_TOKEN_URL=http://127.0.0.1:4455/.ory/kratos/public/sessions/whoami
      - AUTH_ENABLED=true
      - AUTH_API_BASE_URL=/
      - AUTH_MOCK_API=false
      - REMOTE_API_BASE_URL=/
      - REMOTE_MOCK_API=false
      - REMOTE_1_URL=http://localhost:8081
      - REMOTE_2_URL=http://localhost:8082
      - REMOTE_3_URL=http://localhost:8083
      - REMOTE_4_URL=http://localhost:8084
    ports:
      - "8080:8080"
    networks:
      - mojaloop-net
    healthcheck:
      test: wget -q http://172.17.0.1:8080 -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s

  kratos-migrate:
    profiles: ["ory"]
    image: oryd/kratos:v1.1.0
    restart: on-failure
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    environment:
      - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true&mode=rwc
    volumes:
      - type: volume
        source: kratos-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./docker/kratos/oidc
        target: /etc/config/kratos
    networks:
      - mojaloop-net
  kratos:
    profiles: ["ory"]
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v1.1.0
    restart: unless-stopped
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    environment:
      - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true
      - LOG_LEVEL=trace
      # - SERVE_PUBLIC_BASE_URL='http://127.0.0.1:4455/.ory/kratos/public/'
    volumes:
      - type: volume
        source: kratos-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./docker/kratos/oidc
        target: /etc/config/kratos
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    networks:
      - mojaloop-net

  mailslurper:
    profiles: ["ory"]
    image: 'oryd/mailslurper:latest-smtps'
    ports:
      - '4436:4436'
      - '4437:4437'
    networks:
      - mojaloop-net

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.0
    user: root
    container_name: keycloak
    command: ['start-dev --import-realm']
    ports:
      - "8080:8080"
    depends_on:
      mysql-keycloak:
        condition: service_healthy
    volumes:
       - ./docker/keycloak/realm-export.json:/opt/keycloak/data/import/realm.json
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=mysql
      - KC_DB_URL_HOST=mysql-keycloak
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_HEALTH_ENABLED=true
    networks:
      - mojaloop-net
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  mysql-keycloak:
    image: mysql:8.3.0
    container_name: mysql-keycloak
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=keycloak
      - MYSQL_USER=keycloak
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=root_password
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
    networks:
      - mojaloop-net